

#include "stdio.h"
#include "ezdsp_setup.h"

#define XmitL 0x10
#define XmitR 0x20
#define Rcv 0x04 // (0x04 MONO) (0x08 STEREO)
#define Xmit 0x10 // (0x10 MONO) (0x20 STEREO)

int16 FIR_TEST(int16 data4){
	static uint8 n = 5;
	static int16 b[6] = {5448,5463,5471,5471,5463,5448};
	static int16 BUF[6] = {0,0,0,0,0,0};
	long output;
	static int16 test;
	static uint8 i;
	BUF[0] = data4;
	
	for(i = 0; i <= n-1; i++){
		output += (long)b[i]*BUF[i]; 
	}
	
	for(i = n-1; i >= 1; i-- ){
		BUF[i] = BUF[i-1];
	}
	
	test = (int16)(output<<2);
	return test;
}

void playback(void){
    int16 AudioInMSB, FilterOut;
    while(1){
    	if((Rcv & I2S0_IR) == Rcv){  // Wait for interrupt pending flag
	        AudioInMSB = I2S0_W0_MSW_R;  // 16 bit left channel received audio data
	        //AudioInLSB = I2S0_W0_LSW_R; // Only when more than 16-bit
	        FilterOut = FIR_TEST(AudioInMSB);
	        
	        while((Xmit & I2S0_IR) == 0);  // Wait for interrupt pending flag
			I2S0_W0_MSW_W = FilterOut;  // 16 bit left channel transmit audio data
	        //I2S0_W0_LSW_W = AudioInLSB; // Only when > 16-bit
    	}
    }

}

void main(){
	printf("\n\nSystem initializing\n");
	system_init();
	printf("\nPlayback Loop\n");
	playback();
	
	while(1);
}














